// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// ExpirationTokenRepository is an autogenerated mock type for the ExpirationTokenRepository type
type ExpirationTokenRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, email
func (_m *ExpirationTokenRepository) Get(ctx context.Context, email string) (string, error) {
	ret := _m.Called(ctx, email)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, email, token, ttl
func (_m *ExpirationTokenRepository) Save(ctx context.Context, email string, token string, ttl time.Duration) error {
	ret := _m.Called(ctx, email, token, ttl)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, time.Duration) error); ok {
		r0 = rf(ctx, email, token, ttl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewExpirationTokenRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewExpirationTokenRepository creates a new instance of ExpirationTokenRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExpirationTokenRepository(t mockConstructorTestingTNewExpirationTokenRepository) *ExpirationTokenRepository {
	mock := &ExpirationTokenRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
