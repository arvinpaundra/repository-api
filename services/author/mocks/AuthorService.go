// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AuthorService is an autogenerated mock type for the AuthorService type
type AuthorService struct {
	mock.Mock
}

// Delete provides a mock function with given fields: ctx, repositoryId, pemustakaId
func (_m *AuthorService) Delete(ctx context.Context, repositoryId string, pemustakaId string) error {
	ret := _m.Called(ctx, repositoryId, pemustakaId)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, repositoryId, pemustakaId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAuthorService interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthorService creates a new instance of AuthorService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthorService(t mockConstructorTestingTNewAuthorService) *AuthorService {
	mock := &AuthorService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
